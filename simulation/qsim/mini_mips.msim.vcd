$comment
	File created using the following command:
		vcd file mini_mips.msim.vcd -direction
$end
$date
	Mon Dec 30 21:06:32 2024
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module mini_mips_vhd_vec_tst $end
$var wire 1 ! clk $end
$var wire 1 " clr $end
$var wire 1 # debug_ar [31] $end
$var wire 1 $ debug_ar [30] $end
$var wire 1 % debug_ar [29] $end
$var wire 1 & debug_ar [28] $end
$var wire 1 ' debug_ar [27] $end
$var wire 1 ( debug_ar [26] $end
$var wire 1 ) debug_ar [25] $end
$var wire 1 * debug_ar [24] $end
$var wire 1 + debug_ar [23] $end
$var wire 1 , debug_ar [22] $end
$var wire 1 - debug_ar [21] $end
$var wire 1 . debug_ar [20] $end
$var wire 1 / debug_ar [19] $end
$var wire 1 0 debug_ar [18] $end
$var wire 1 1 debug_ar [17] $end
$var wire 1 2 debug_ar [16] $end
$var wire 1 3 debug_ar [15] $end
$var wire 1 4 debug_ar [14] $end
$var wire 1 5 debug_ar [13] $end
$var wire 1 6 debug_ar [12] $end
$var wire 1 7 debug_ar [11] $end
$var wire 1 8 debug_ar [10] $end
$var wire 1 9 debug_ar [9] $end
$var wire 1 : debug_ar [8] $end
$var wire 1 ; debug_ar [7] $end
$var wire 1 < debug_ar [6] $end
$var wire 1 = debug_ar [5] $end
$var wire 1 > debug_ar [4] $end
$var wire 1 ? debug_ar [3] $end
$var wire 1 @ debug_ar [2] $end
$var wire 1 A debug_ar [1] $end
$var wire 1 B debug_ar [0] $end
$var wire 1 C debug_func [5] $end
$var wire 1 D debug_func [4] $end
$var wire 1 E debug_func [3] $end
$var wire 1 F debug_func [2] $end
$var wire 1 G debug_func [1] $end
$var wire 1 H debug_func [0] $end
$var wire 1 I debug_immediate [31] $end
$var wire 1 J debug_immediate [30] $end
$var wire 1 K debug_immediate [29] $end
$var wire 1 L debug_immediate [28] $end
$var wire 1 M debug_immediate [27] $end
$var wire 1 N debug_immediate [26] $end
$var wire 1 O debug_immediate [25] $end
$var wire 1 P debug_immediate [24] $end
$var wire 1 Q debug_immediate [23] $end
$var wire 1 R debug_immediate [22] $end
$var wire 1 S debug_immediate [21] $end
$var wire 1 T debug_immediate [20] $end
$var wire 1 U debug_immediate [19] $end
$var wire 1 V debug_immediate [18] $end
$var wire 1 W debug_immediate [17] $end
$var wire 1 X debug_immediate [16] $end
$var wire 1 Y debug_immediate [15] $end
$var wire 1 Z debug_immediate [14] $end
$var wire 1 [ debug_immediate [13] $end
$var wire 1 \ debug_immediate [12] $end
$var wire 1 ] debug_immediate [11] $end
$var wire 1 ^ debug_immediate [10] $end
$var wire 1 _ debug_immediate [9] $end
$var wire 1 ` debug_immediate [8] $end
$var wire 1 a debug_immediate [7] $end
$var wire 1 b debug_immediate [6] $end
$var wire 1 c debug_immediate [5] $end
$var wire 1 d debug_immediate [4] $end
$var wire 1 e debug_immediate [3] $end
$var wire 1 f debug_immediate [2] $end
$var wire 1 g debug_immediate [1] $end
$var wire 1 h debug_immediate [0] $end
$var wire 1 i debug_ir [31] $end
$var wire 1 j debug_ir [30] $end
$var wire 1 k debug_ir [29] $end
$var wire 1 l debug_ir [28] $end
$var wire 1 m debug_ir [27] $end
$var wire 1 n debug_ir [26] $end
$var wire 1 o debug_ir [25] $end
$var wire 1 p debug_ir [24] $end
$var wire 1 q debug_ir [23] $end
$var wire 1 r debug_ir [22] $end
$var wire 1 s debug_ir [21] $end
$var wire 1 t debug_ir [20] $end
$var wire 1 u debug_ir [19] $end
$var wire 1 v debug_ir [18] $end
$var wire 1 w debug_ir [17] $end
$var wire 1 x debug_ir [16] $end
$var wire 1 y debug_ir [15] $end
$var wire 1 z debug_ir [14] $end
$var wire 1 { debug_ir [13] $end
$var wire 1 | debug_ir [12] $end
$var wire 1 } debug_ir [11] $end
$var wire 1 ~ debug_ir [10] $end
$var wire 1 !! debug_ir [9] $end
$var wire 1 "! debug_ir [8] $end
$var wire 1 #! debug_ir [7] $end
$var wire 1 $! debug_ir [6] $end
$var wire 1 %! debug_ir [5] $end
$var wire 1 &! debug_ir [4] $end
$var wire 1 '! debug_ir [3] $end
$var wire 1 (! debug_ir [2] $end
$var wire 1 )! debug_ir [1] $end
$var wire 1 *! debug_ir [0] $end
$var wire 1 +! debug_mem_data_out [31] $end
$var wire 1 ,! debug_mem_data_out [30] $end
$var wire 1 -! debug_mem_data_out [29] $end
$var wire 1 .! debug_mem_data_out [28] $end
$var wire 1 /! debug_mem_data_out [27] $end
$var wire 1 0! debug_mem_data_out [26] $end
$var wire 1 1! debug_mem_data_out [25] $end
$var wire 1 2! debug_mem_data_out [24] $end
$var wire 1 3! debug_mem_data_out [23] $end
$var wire 1 4! debug_mem_data_out [22] $end
$var wire 1 5! debug_mem_data_out [21] $end
$var wire 1 6! debug_mem_data_out [20] $end
$var wire 1 7! debug_mem_data_out [19] $end
$var wire 1 8! debug_mem_data_out [18] $end
$var wire 1 9! debug_mem_data_out [17] $end
$var wire 1 :! debug_mem_data_out [16] $end
$var wire 1 ;! debug_mem_data_out [15] $end
$var wire 1 <! debug_mem_data_out [14] $end
$var wire 1 =! debug_mem_data_out [13] $end
$var wire 1 >! debug_mem_data_out [12] $end
$var wire 1 ?! debug_mem_data_out [11] $end
$var wire 1 @! debug_mem_data_out [10] $end
$var wire 1 A! debug_mem_data_out [9] $end
$var wire 1 B! debug_mem_data_out [8] $end
$var wire 1 C! debug_mem_data_out [7] $end
$var wire 1 D! debug_mem_data_out [6] $end
$var wire 1 E! debug_mem_data_out [5] $end
$var wire 1 F! debug_mem_data_out [4] $end
$var wire 1 G! debug_mem_data_out [3] $end
$var wire 1 H! debug_mem_data_out [2] $end
$var wire 1 I! debug_mem_data_out [1] $end
$var wire 1 J! debug_mem_data_out [0] $end
$var wire 1 K! debug_opcode [5] $end
$var wire 1 L! debug_opcode [4] $end
$var wire 1 M! debug_opcode [3] $end
$var wire 1 N! debug_opcode [2] $end
$var wire 1 O! debug_opcode [1] $end
$var wire 1 P! debug_opcode [0] $end
$var wire 1 Q! debug_pc [9] $end
$var wire 1 R! debug_pc [8] $end
$var wire 1 S! debug_pc [7] $end
$var wire 1 T! debug_pc [6] $end
$var wire 1 U! debug_pc [5] $end
$var wire 1 V! debug_pc [4] $end
$var wire 1 W! debug_pc [3] $end
$var wire 1 X! debug_pc [2] $end
$var wire 1 Y! debug_pc [1] $end
$var wire 1 Z! debug_pc [0] $end
$var wire 1 [! debug_rd_addr [4] $end
$var wire 1 \! debug_rd_addr [3] $end
$var wire 1 ]! debug_rd_addr [2] $end
$var wire 1 ^! debug_rd_addr [1] $end
$var wire 1 _! debug_rd_addr [0] $end
$var wire 1 `! debug_rs_addr [4] $end
$var wire 1 a! debug_rs_addr [3] $end
$var wire 1 b! debug_rs_addr [2] $end
$var wire 1 c! debug_rs_addr [1] $end
$var wire 1 d! debug_rs_addr [0] $end
$var wire 1 e! debug_rt_addr [4] $end
$var wire 1 f! debug_rt_addr [3] $end
$var wire 1 g! debug_rt_addr [2] $end
$var wire 1 h! debug_rt_addr [1] $end
$var wire 1 i! debug_rt_addr [0] $end
$var wire 1 j! debug_shamt [4] $end
$var wire 1 k! debug_shamt [3] $end
$var wire 1 l! debug_shamt [2] $end
$var wire 1 m! debug_shamt [1] $end
$var wire 1 n! debug_shamt [0] $end
$var wire 1 o! input [31] $end
$var wire 1 p! input [30] $end
$var wire 1 q! input [29] $end
$var wire 1 r! input [28] $end
$var wire 1 s! input [27] $end
$var wire 1 t! input [26] $end
$var wire 1 u! input [25] $end
$var wire 1 v! input [24] $end
$var wire 1 w! input [23] $end
$var wire 1 x! input [22] $end
$var wire 1 y! input [21] $end
$var wire 1 z! input [20] $end
$var wire 1 {! input [19] $end
$var wire 1 |! input [18] $end
$var wire 1 }! input [17] $end
$var wire 1 ~! input [16] $end
$var wire 1 !" input [15] $end
$var wire 1 "" input [14] $end
$var wire 1 #" input [13] $end
$var wire 1 $" input [12] $end
$var wire 1 %" input [11] $end
$var wire 1 &" input [10] $end
$var wire 1 '" input [9] $end
$var wire 1 (" input [8] $end
$var wire 1 )" input [7] $end
$var wire 1 *" input [6] $end
$var wire 1 +" input [5] $end
$var wire 1 ," input [4] $end
$var wire 1 -" input [3] $end
$var wire 1 ." input [2] $end
$var wire 1 /" input [1] $end
$var wire 1 0" input [0] $end
$var wire 1 1" output [31] $end
$var wire 1 2" output [30] $end
$var wire 1 3" output [29] $end
$var wire 1 4" output [28] $end
$var wire 1 5" output [27] $end
$var wire 1 6" output [26] $end
$var wire 1 7" output [25] $end
$var wire 1 8" output [24] $end
$var wire 1 9" output [23] $end
$var wire 1 :" output [22] $end
$var wire 1 ;" output [21] $end
$var wire 1 <" output [20] $end
$var wire 1 =" output [19] $end
$var wire 1 >" output [18] $end
$var wire 1 ?" output [17] $end
$var wire 1 @" output [16] $end
$var wire 1 A" output [15] $end
$var wire 1 B" output [14] $end
$var wire 1 C" output [13] $end
$var wire 1 D" output [12] $end
$var wire 1 E" output [11] $end
$var wire 1 F" output [10] $end
$var wire 1 G" output [9] $end
$var wire 1 H" output [8] $end
$var wire 1 I" output [7] $end
$var wire 1 J" output [6] $end
$var wire 1 K" output [5] $end
$var wire 1 L" output [4] $end
$var wire 1 M" output [3] $end
$var wire 1 N" output [2] $end
$var wire 1 O" output [1] $end
$var wire 1 P" output [0] $end

$scope module i1 $end
$var wire 1 Q" gnd $end
$var wire 1 R" vcc $end
$var wire 1 S" unknown $end
$var wire 1 T" devoe $end
$var wire 1 U" devclrn $end
$var wire 1 V" devpor $end
$var wire 1 W" ww_devoe $end
$var wire 1 X" ww_devclrn $end
$var wire 1 Y" ww_devpor $end
$var wire 1 Z" ww_clk $end
$var wire 1 [" ww_clr $end
$var wire 1 \" ww_input [31] $end
$var wire 1 ]" ww_input [30] $end
$var wire 1 ^" ww_input [29] $end
$var wire 1 _" ww_input [28] $end
$var wire 1 `" ww_input [27] $end
$var wire 1 a" ww_input [26] $end
$var wire 1 b" ww_input [25] $end
$var wire 1 c" ww_input [24] $end
$var wire 1 d" ww_input [23] $end
$var wire 1 e" ww_input [22] $end
$var wire 1 f" ww_input [21] $end
$var wire 1 g" ww_input [20] $end
$var wire 1 h" ww_input [19] $end
$var wire 1 i" ww_input [18] $end
$var wire 1 j" ww_input [17] $end
$var wire 1 k" ww_input [16] $end
$var wire 1 l" ww_input [15] $end
$var wire 1 m" ww_input [14] $end
$var wire 1 n" ww_input [13] $end
$var wire 1 o" ww_input [12] $end
$var wire 1 p" ww_input [11] $end
$var wire 1 q" ww_input [10] $end
$var wire 1 r" ww_input [9] $end
$var wire 1 s" ww_input [8] $end
$var wire 1 t" ww_input [7] $end
$var wire 1 u" ww_input [6] $end
$var wire 1 v" ww_input [5] $end
$var wire 1 w" ww_input [4] $end
$var wire 1 x" ww_input [3] $end
$var wire 1 y" ww_input [2] $end
$var wire 1 z" ww_input [1] $end
$var wire 1 {" ww_input [0] $end
$var wire 1 |" ww_output [31] $end
$var wire 1 }" ww_output [30] $end
$var wire 1 ~" ww_output [29] $end
$var wire 1 !# ww_output [28] $end
$var wire 1 "# ww_output [27] $end
$var wire 1 ## ww_output [26] $end
$var wire 1 $# ww_output [25] $end
$var wire 1 %# ww_output [24] $end
$var wire 1 &# ww_output [23] $end
$var wire 1 '# ww_output [22] $end
$var wire 1 (# ww_output [21] $end
$var wire 1 )# ww_output [20] $end
$var wire 1 *# ww_output [19] $end
$var wire 1 +# ww_output [18] $end
$var wire 1 ,# ww_output [17] $end
$var wire 1 -# ww_output [16] $end
$var wire 1 .# ww_output [15] $end
$var wire 1 /# ww_output [14] $end
$var wire 1 0# ww_output [13] $end
$var wire 1 1# ww_output [12] $end
$var wire 1 2# ww_output [11] $end
$var wire 1 3# ww_output [10] $end
$var wire 1 4# ww_output [9] $end
$var wire 1 5# ww_output [8] $end
$var wire 1 6# ww_output [7] $end
$var wire 1 7# ww_output [6] $end
$var wire 1 8# ww_output [5] $end
$var wire 1 9# ww_output [4] $end
$var wire 1 :# ww_output [3] $end
$var wire 1 ;# ww_output [2] $end
$var wire 1 <# ww_output [1] $end
$var wire 1 =# ww_output [0] $end
$var wire 1 ># ww_debug_pc [9] $end
$var wire 1 ?# ww_debug_pc [8] $end
$var wire 1 @# ww_debug_pc [7] $end
$var wire 1 A# ww_debug_pc [6] $end
$var wire 1 B# ww_debug_pc [5] $end
$var wire 1 C# ww_debug_pc [4] $end
$var wire 1 D# ww_debug_pc [3] $end
$var wire 1 E# ww_debug_pc [2] $end
$var wire 1 F# ww_debug_pc [1] $end
$var wire 1 G# ww_debug_pc [0] $end
$var wire 1 H# ww_debug_ir [31] $end
$var wire 1 I# ww_debug_ir [30] $end
$var wire 1 J# ww_debug_ir [29] $end
$var wire 1 K# ww_debug_ir [28] $end
$var wire 1 L# ww_debug_ir [27] $end
$var wire 1 M# ww_debug_ir [26] $end
$var wire 1 N# ww_debug_ir [25] $end
$var wire 1 O# ww_debug_ir [24] $end
$var wire 1 P# ww_debug_ir [23] $end
$var wire 1 Q# ww_debug_ir [22] $end
$var wire 1 R# ww_debug_ir [21] $end
$var wire 1 S# ww_debug_ir [20] $end
$var wire 1 T# ww_debug_ir [19] $end
$var wire 1 U# ww_debug_ir [18] $end
$var wire 1 V# ww_debug_ir [17] $end
$var wire 1 W# ww_debug_ir [16] $end
$var wire 1 X# ww_debug_ir [15] $end
$var wire 1 Y# ww_debug_ir [14] $end
$var wire 1 Z# ww_debug_ir [13] $end
$var wire 1 [# ww_debug_ir [12] $end
$var wire 1 \# ww_debug_ir [11] $end
$var wire 1 ]# ww_debug_ir [10] $end
$var wire 1 ^# ww_debug_ir [9] $end
$var wire 1 _# ww_debug_ir [8] $end
$var wire 1 `# ww_debug_ir [7] $end
$var wire 1 a# ww_debug_ir [6] $end
$var wire 1 b# ww_debug_ir [5] $end
$var wire 1 c# ww_debug_ir [4] $end
$var wire 1 d# ww_debug_ir [3] $end
$var wire 1 e# ww_debug_ir [2] $end
$var wire 1 f# ww_debug_ir [1] $end
$var wire 1 g# ww_debug_ir [0] $end
$var wire 1 h# ww_debug_opcode [5] $end
$var wire 1 i# ww_debug_opcode [4] $end
$var wire 1 j# ww_debug_opcode [3] $end
$var wire 1 k# ww_debug_opcode [2] $end
$var wire 1 l# ww_debug_opcode [1] $end
$var wire 1 m# ww_debug_opcode [0] $end
$var wire 1 n# ww_debug_rt_addr [4] $end
$var wire 1 o# ww_debug_rt_addr [3] $end
$var wire 1 p# ww_debug_rt_addr [2] $end
$var wire 1 q# ww_debug_rt_addr [1] $end
$var wire 1 r# ww_debug_rt_addr [0] $end
$var wire 1 s# ww_debug_rs_addr [4] $end
$var wire 1 t# ww_debug_rs_addr [3] $end
$var wire 1 u# ww_debug_rs_addr [2] $end
$var wire 1 v# ww_debug_rs_addr [1] $end
$var wire 1 w# ww_debug_rs_addr [0] $end
$var wire 1 x# ww_debug_rd_addr [4] $end
$var wire 1 y# ww_debug_rd_addr [3] $end
$var wire 1 z# ww_debug_rd_addr [2] $end
$var wire 1 {# ww_debug_rd_addr [1] $end
$var wire 1 |# ww_debug_rd_addr [0] $end
$var wire 1 }# ww_debug_shamt [4] $end
$var wire 1 ~# ww_debug_shamt [3] $end
$var wire 1 !$ ww_debug_shamt [2] $end
$var wire 1 "$ ww_debug_shamt [1] $end
$var wire 1 #$ ww_debug_shamt [0] $end
$var wire 1 $$ ww_debug_func [5] $end
$var wire 1 %$ ww_debug_func [4] $end
$var wire 1 &$ ww_debug_func [3] $end
$var wire 1 '$ ww_debug_func [2] $end
$var wire 1 ($ ww_debug_func [1] $end
$var wire 1 )$ ww_debug_func [0] $end
$var wire 1 *$ ww_debug_immediate [31] $end
$var wire 1 +$ ww_debug_immediate [30] $end
$var wire 1 ,$ ww_debug_immediate [29] $end
$var wire 1 -$ ww_debug_immediate [28] $end
$var wire 1 .$ ww_debug_immediate [27] $end
$var wire 1 /$ ww_debug_immediate [26] $end
$var wire 1 0$ ww_debug_immediate [25] $end
$var wire 1 1$ ww_debug_immediate [24] $end
$var wire 1 2$ ww_debug_immediate [23] $end
$var wire 1 3$ ww_debug_immediate [22] $end
$var wire 1 4$ ww_debug_immediate [21] $end
$var wire 1 5$ ww_debug_immediate [20] $end
$var wire 1 6$ ww_debug_immediate [19] $end
$var wire 1 7$ ww_debug_immediate [18] $end
$var wire 1 8$ ww_debug_immediate [17] $end
$var wire 1 9$ ww_debug_immediate [16] $end
$var wire 1 :$ ww_debug_immediate [15] $end
$var wire 1 ;$ ww_debug_immediate [14] $end
$var wire 1 <$ ww_debug_immediate [13] $end
$var wire 1 =$ ww_debug_immediate [12] $end
$var wire 1 >$ ww_debug_immediate [11] $end
$var wire 1 ?$ ww_debug_immediate [10] $end
$var wire 1 @$ ww_debug_immediate [9] $end
$var wire 1 A$ ww_debug_immediate [8] $end
$var wire 1 B$ ww_debug_immediate [7] $end
$var wire 1 C$ ww_debug_immediate [6] $end
$var wire 1 D$ ww_debug_immediate [5] $end
$var wire 1 E$ ww_debug_immediate [4] $end
$var wire 1 F$ ww_debug_immediate [3] $end
$var wire 1 G$ ww_debug_immediate [2] $end
$var wire 1 H$ ww_debug_immediate [1] $end
$var wire 1 I$ ww_debug_immediate [0] $end
$var wire 1 J$ ww_debug_mem_data_out [31] $end
$var wire 1 K$ ww_debug_mem_data_out [30] $end
$var wire 1 L$ ww_debug_mem_data_out [29] $end
$var wire 1 M$ ww_debug_mem_data_out [28] $end
$var wire 1 N$ ww_debug_mem_data_out [27] $end
$var wire 1 O$ ww_debug_mem_data_out [26] $end
$var wire 1 P$ ww_debug_mem_data_out [25] $end
$var wire 1 Q$ ww_debug_mem_data_out [24] $end
$var wire 1 R$ ww_debug_mem_data_out [23] $end
$var wire 1 S$ ww_debug_mem_data_out [22] $end
$var wire 1 T$ ww_debug_mem_data_out [21] $end
$var wire 1 U$ ww_debug_mem_data_out [20] $end
$var wire 1 V$ ww_debug_mem_data_out [19] $end
$var wire 1 W$ ww_debug_mem_data_out [18] $end
$var wire 1 X$ ww_debug_mem_data_out [17] $end
$var wire 1 Y$ ww_debug_mem_data_out [16] $end
$var wire 1 Z$ ww_debug_mem_data_out [15] $end
$var wire 1 [$ ww_debug_mem_data_out [14] $end
$var wire 1 \$ ww_debug_mem_data_out [13] $end
$var wire 1 ]$ ww_debug_mem_data_out [12] $end
$var wire 1 ^$ ww_debug_mem_data_out [11] $end
$var wire 1 _$ ww_debug_mem_data_out [10] $end
$var wire 1 `$ ww_debug_mem_data_out [9] $end
$var wire 1 a$ ww_debug_mem_data_out [8] $end
$var wire 1 b$ ww_debug_mem_data_out [7] $end
$var wire 1 c$ ww_debug_mem_data_out [6] $end
$var wire 1 d$ ww_debug_mem_data_out [5] $end
$var wire 1 e$ ww_debug_mem_data_out [4] $end
$var wire 1 f$ ww_debug_mem_data_out [3] $end
$var wire 1 g$ ww_debug_mem_data_out [2] $end
$var wire 1 h$ ww_debug_mem_data_out [1] $end
$var wire 1 i$ ww_debug_mem_data_out [0] $end
$var wire 1 j$ ww_debug_ar [31] $end
$var wire 1 k$ ww_debug_ar [30] $end
$var wire 1 l$ ww_debug_ar [29] $end
$var wire 1 m$ ww_debug_ar [28] $end
$var wire 1 n$ ww_debug_ar [27] $end
$var wire 1 o$ ww_debug_ar [26] $end
$var wire 1 p$ ww_debug_ar [25] $end
$var wire 1 q$ ww_debug_ar [24] $end
$var wire 1 r$ ww_debug_ar [23] $end
$var wire 1 s$ ww_debug_ar [22] $end
$var wire 1 t$ ww_debug_ar [21] $end
$var wire 1 u$ ww_debug_ar [20] $end
$var wire 1 v$ ww_debug_ar [19] $end
$var wire 1 w$ ww_debug_ar [18] $end
$var wire 1 x$ ww_debug_ar [17] $end
$var wire 1 y$ ww_debug_ar [16] $end
$var wire 1 z$ ww_debug_ar [15] $end
$var wire 1 {$ ww_debug_ar [14] $end
$var wire 1 |$ ww_debug_ar [13] $end
$var wire 1 }$ ww_debug_ar [12] $end
$var wire 1 ~$ ww_debug_ar [11] $end
$var wire 1 !% ww_debug_ar [10] $end
$var wire 1 "% ww_debug_ar [9] $end
$var wire 1 #% ww_debug_ar [8] $end
$var wire 1 $% ww_debug_ar [7] $end
$var wire 1 %% ww_debug_ar [6] $end
$var wire 1 &% ww_debug_ar [5] $end
$var wire 1 '% ww_debug_ar [4] $end
$var wire 1 (% ww_debug_ar [3] $end
$var wire 1 )% ww_debug_ar [2] $end
$var wire 1 *% ww_debug_ar [1] $end
$var wire 1 +% ww_debug_ar [0] $end
$var wire 1 ,% \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [4] $end
$var wire 1 -% \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [3] $end
$var wire 1 .% \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [2] $end
$var wire 1 /% \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [1] $end
$var wire 1 0% \~QUARTUS_CREATED_ADC1~_CHSEL_bus\ [0] $end
$var wire 1 1% \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [4] $end
$var wire 1 2% \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [3] $end
$var wire 1 3% \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [2] $end
$var wire 1 4% \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [1] $end
$var wire 1 5% \~QUARTUS_CREATED_ADC2~_CHSEL_bus\ [0] $end
$var wire 1 6% \clk~inputclkctrl_INCLK_bus\ [3] $end
$var wire 1 7% \clk~inputclkctrl_INCLK_bus\ [2] $end
$var wire 1 8% \clk~inputclkctrl_INCLK_bus\ [1] $end
$var wire 1 9% \clk~inputclkctrl_INCLK_bus\ [0] $end
$var wire 1 :% \input[0]~input_o\ $end
$var wire 1 ;% \input[1]~input_o\ $end
$var wire 1 <% \input[2]~input_o\ $end
$var wire 1 =% \input[3]~input_o\ $end
$var wire 1 >% \input[4]~input_o\ $end
$var wire 1 ?% \input[5]~input_o\ $end
$var wire 1 @% \input[6]~input_o\ $end
$var wire 1 A% \input[7]~input_o\ $end
$var wire 1 B% \input[8]~input_o\ $end
$var wire 1 C% \input[9]~input_o\ $end
$var wire 1 D% \input[10]~input_o\ $end
$var wire 1 E% \input[11]~input_o\ $end
$var wire 1 F% \input[12]~input_o\ $end
$var wire 1 G% \input[13]~input_o\ $end
$var wire 1 H% \input[14]~input_o\ $end
$var wire 1 I% \input[15]~input_o\ $end
$var wire 1 J% \input[16]~input_o\ $end
$var wire 1 K% \input[17]~input_o\ $end
$var wire 1 L% \input[18]~input_o\ $end
$var wire 1 M% \input[19]~input_o\ $end
$var wire 1 N% \input[20]~input_o\ $end
$var wire 1 O% \input[21]~input_o\ $end
$var wire 1 P% \input[22]~input_o\ $end
$var wire 1 Q% \input[23]~input_o\ $end
$var wire 1 R% \input[24]~input_o\ $end
$var wire 1 S% \input[25]~input_o\ $end
$var wire 1 T% \input[26]~input_o\ $end
$var wire 1 U% \input[27]~input_o\ $end
$var wire 1 V% \input[28]~input_o\ $end
$var wire 1 W% \input[29]~input_o\ $end
$var wire 1 X% \input[30]~input_o\ $end
$var wire 1 Y% \input[31]~input_o\ $end
$var wire 1 Z% \~QUARTUS_CREATED_GND~I_combout\ $end
$var wire 1 [% \~QUARTUS_CREATED_UNVM~~busy\ $end
$var wire 1 \% \~QUARTUS_CREATED_ADC1~~eoc\ $end
$var wire 1 ]% \~QUARTUS_CREATED_ADC2~~eoc\ $end
$var wire 1 ^% \output[0]~output_o\ $end
$var wire 1 _% \output[1]~output_o\ $end
$var wire 1 `% \output[2]~output_o\ $end
$var wire 1 a% \output[3]~output_o\ $end
$var wire 1 b% \output[4]~output_o\ $end
$var wire 1 c% \output[5]~output_o\ $end
$var wire 1 d% \output[6]~output_o\ $end
$var wire 1 e% \output[7]~output_o\ $end
$var wire 1 f% \output[8]~output_o\ $end
$var wire 1 g% \output[9]~output_o\ $end
$var wire 1 h% \output[10]~output_o\ $end
$var wire 1 i% \output[11]~output_o\ $end
$var wire 1 j% \output[12]~output_o\ $end
$var wire 1 k% \output[13]~output_o\ $end
$var wire 1 l% \output[14]~output_o\ $end
$var wire 1 m% \output[15]~output_o\ $end
$var wire 1 n% \output[16]~output_o\ $end
$var wire 1 o% \output[17]~output_o\ $end
$var wire 1 p% \output[18]~output_o\ $end
$var wire 1 q% \output[19]~output_o\ $end
$var wire 1 r% \output[20]~output_o\ $end
$var wire 1 s% \output[21]~output_o\ $end
$var wire 1 t% \output[22]~output_o\ $end
$var wire 1 u% \output[23]~output_o\ $end
$var wire 1 v% \output[24]~output_o\ $end
$var wire 1 w% \output[25]~output_o\ $end
$var wire 1 x% \output[26]~output_o\ $end
$var wire 1 y% \output[27]~output_o\ $end
$var wire 1 z% \output[28]~output_o\ $end
$var wire 1 {% \output[29]~output_o\ $end
$var wire 1 |% \output[30]~output_o\ $end
$var wire 1 }% \output[31]~output_o\ $end
$var wire 1 ~% \debug_pc[0]~output_o\ $end
$var wire 1 !& \debug_pc[1]~output_o\ $end
$var wire 1 "& \debug_pc[2]~output_o\ $end
$var wire 1 #& \debug_pc[3]~output_o\ $end
$var wire 1 $& \debug_pc[4]~output_o\ $end
$var wire 1 %& \debug_pc[5]~output_o\ $end
$var wire 1 && \debug_pc[6]~output_o\ $end
$var wire 1 '& \debug_pc[7]~output_o\ $end
$var wire 1 (& \debug_pc[8]~output_o\ $end
$var wire 1 )& \debug_pc[9]~output_o\ $end
$var wire 1 *& \debug_ir[0]~output_o\ $end
$var wire 1 +& \debug_ir[1]~output_o\ $end
$var wire 1 ,& \debug_ir[2]~output_o\ $end
$var wire 1 -& \debug_ir[3]~output_o\ $end
$var wire 1 .& \debug_ir[4]~output_o\ $end
$var wire 1 /& \debug_ir[5]~output_o\ $end
$var wire 1 0& \debug_ir[6]~output_o\ $end
$var wire 1 1& \debug_ir[7]~output_o\ $end
$var wire 1 2& \debug_ir[8]~output_o\ $end
$var wire 1 3& \debug_ir[9]~output_o\ $end
$var wire 1 4& \debug_ir[10]~output_o\ $end
$var wire 1 5& \debug_ir[11]~output_o\ $end
$var wire 1 6& \debug_ir[12]~output_o\ $end
$var wire 1 7& \debug_ir[13]~output_o\ $end
$var wire 1 8& \debug_ir[14]~output_o\ $end
$var wire 1 9& \debug_ir[15]~output_o\ $end
$var wire 1 :& \debug_ir[16]~output_o\ $end
$var wire 1 ;& \debug_ir[17]~output_o\ $end
$var wire 1 <& \debug_ir[18]~output_o\ $end
$var wire 1 =& \debug_ir[19]~output_o\ $end
$var wire 1 >& \debug_ir[20]~output_o\ $end
$var wire 1 ?& \debug_ir[21]~output_o\ $end
$var wire 1 @& \debug_ir[22]~output_o\ $end
$var wire 1 A& \debug_ir[23]~output_o\ $end
$var wire 1 B& \debug_ir[24]~output_o\ $end
$var wire 1 C& \debug_ir[25]~output_o\ $end
$var wire 1 D& \debug_ir[26]~output_o\ $end
$var wire 1 E& \debug_ir[27]~output_o\ $end
$var wire 1 F& \debug_ir[28]~output_o\ $end
$var wire 1 G& \debug_ir[29]~output_o\ $end
$var wire 1 H& \debug_ir[30]~output_o\ $end
$var wire 1 I& \debug_ir[31]~output_o\ $end
$var wire 1 J& \debug_opcode[0]~output_o\ $end
$var wire 1 K& \debug_opcode[1]~output_o\ $end
$var wire 1 L& \debug_opcode[2]~output_o\ $end
$var wire 1 M& \debug_opcode[3]~output_o\ $end
$var wire 1 N& \debug_opcode[4]~output_o\ $end
$var wire 1 O& \debug_opcode[5]~output_o\ $end
$var wire 1 P& \debug_rt_addr[0]~output_o\ $end
$var wire 1 Q& \debug_rt_addr[1]~output_o\ $end
$var wire 1 R& \debug_rt_addr[2]~output_o\ $end
$var wire 1 S& \debug_rt_addr[3]~output_o\ $end
$var wire 1 T& \debug_rt_addr[4]~output_o\ $end
$var wire 1 U& \debug_rs_addr[0]~output_o\ $end
$var wire 1 V& \debug_rs_addr[1]~output_o\ $end
$var wire 1 W& \debug_rs_addr[2]~output_o\ $end
$var wire 1 X& \debug_rs_addr[3]~output_o\ $end
$var wire 1 Y& \debug_rs_addr[4]~output_o\ $end
$var wire 1 Z& \debug_rd_addr[0]~output_o\ $end
$var wire 1 [& \debug_rd_addr[1]~output_o\ $end
$var wire 1 \& \debug_rd_addr[2]~output_o\ $end
$var wire 1 ]& \debug_rd_addr[3]~output_o\ $end
$var wire 1 ^& \debug_rd_addr[4]~output_o\ $end
$var wire 1 _& \debug_shamt[0]~output_o\ $end
$var wire 1 `& \debug_shamt[1]~output_o\ $end
$var wire 1 a& \debug_shamt[2]~output_o\ $end
$var wire 1 b& \debug_shamt[3]~output_o\ $end
$var wire 1 c& \debug_shamt[4]~output_o\ $end
$var wire 1 d& \debug_func[0]~output_o\ $end
$var wire 1 e& \debug_func[1]~output_o\ $end
$var wire 1 f& \debug_func[2]~output_o\ $end
$var wire 1 g& \debug_func[3]~output_o\ $end
$var wire 1 h& \debug_func[4]~output_o\ $end
$var wire 1 i& \debug_func[5]~output_o\ $end
$var wire 1 j& \debug_immediate[0]~output_o\ $end
$var wire 1 k& \debug_immediate[1]~output_o\ $end
$var wire 1 l& \debug_immediate[2]~output_o\ $end
$var wire 1 m& \debug_immediate[3]~output_o\ $end
$var wire 1 n& \debug_immediate[4]~output_o\ $end
$var wire 1 o& \debug_immediate[5]~output_o\ $end
$var wire 1 p& \debug_immediate[6]~output_o\ $end
$var wire 1 q& \debug_immediate[7]~output_o\ $end
$var wire 1 r& \debug_immediate[8]~output_o\ $end
$var wire 1 s& \debug_immediate[9]~output_o\ $end
$var wire 1 t& \debug_immediate[10]~output_o\ $end
$var wire 1 u& \debug_immediate[11]~output_o\ $end
$var wire 1 v& \debug_immediate[12]~output_o\ $end
$var wire 1 w& \debug_immediate[13]~output_o\ $end
$var wire 1 x& \debug_immediate[14]~output_o\ $end
$var wire 1 y& \debug_immediate[15]~output_o\ $end
$var wire 1 z& \debug_immediate[16]~output_o\ $end
$var wire 1 {& \debug_immediate[17]~output_o\ $end
$var wire 1 |& \debug_immediate[18]~output_o\ $end
$var wire 1 }& \debug_immediate[19]~output_o\ $end
$var wire 1 ~& \debug_immediate[20]~output_o\ $end
$var wire 1 !' \debug_immediate[21]~output_o\ $end
$var wire 1 "' \debug_immediate[22]~output_o\ $end
$var wire 1 #' \debug_immediate[23]~output_o\ $end
$var wire 1 $' \debug_immediate[24]~output_o\ $end
$var wire 1 %' \debug_immediate[25]~output_o\ $end
$var wire 1 &' \debug_immediate[26]~output_o\ $end
$var wire 1 '' \debug_immediate[27]~output_o\ $end
$var wire 1 (' \debug_immediate[28]~output_o\ $end
$var wire 1 )' \debug_immediate[29]~output_o\ $end
$var wire 1 *' \debug_immediate[30]~output_o\ $end
$var wire 1 +' \debug_immediate[31]~output_o\ $end
$var wire 1 ,' \debug_mem_data_out[0]~output_o\ $end
$var wire 1 -' \debug_mem_data_out[1]~output_o\ $end
$var wire 1 .' \debug_mem_data_out[2]~output_o\ $end
$var wire 1 /' \debug_mem_data_out[3]~output_o\ $end
$var wire 1 0' \debug_mem_data_out[4]~output_o\ $end
$var wire 1 1' \debug_mem_data_out[5]~output_o\ $end
$var wire 1 2' \debug_mem_data_out[6]~output_o\ $end
$var wire 1 3' \debug_mem_data_out[7]~output_o\ $end
$var wire 1 4' \debug_mem_data_out[8]~output_o\ $end
$var wire 1 5' \debug_mem_data_out[9]~output_o\ $end
$var wire 1 6' \debug_mem_data_out[10]~output_o\ $end
$var wire 1 7' \debug_mem_data_out[11]~output_o\ $end
$var wire 1 8' \debug_mem_data_out[12]~output_o\ $end
$var wire 1 9' \debug_mem_data_out[13]~output_o\ $end
$var wire 1 :' \debug_mem_data_out[14]~output_o\ $end
$var wire 1 ;' \debug_mem_data_out[15]~output_o\ $end
$var wire 1 <' \debug_mem_data_out[16]~output_o\ $end
$var wire 1 =' \debug_mem_data_out[17]~output_o\ $end
$var wire 1 >' \debug_mem_data_out[18]~output_o\ $end
$var wire 1 ?' \debug_mem_data_out[19]~output_o\ $end
$var wire 1 @' \debug_mem_data_out[20]~output_o\ $end
$var wire 1 A' \debug_mem_data_out[21]~output_o\ $end
$var wire 1 B' \debug_mem_data_out[22]~output_o\ $end
$var wire 1 C' \debug_mem_data_out[23]~output_o\ $end
$var wire 1 D' \debug_mem_data_out[24]~output_o\ $end
$var wire 1 E' \debug_mem_data_out[25]~output_o\ $end
$var wire 1 F' \debug_mem_data_out[26]~output_o\ $end
$var wire 1 G' \debug_mem_data_out[27]~output_o\ $end
$var wire 1 H' \debug_mem_data_out[28]~output_o\ $end
$var wire 1 I' \debug_mem_data_out[29]~output_o\ $end
$var wire 1 J' \debug_mem_data_out[30]~output_o\ $end
$var wire 1 K' \debug_mem_data_out[31]~output_o\ $end
$var wire 1 L' \debug_ar[0]~output_o\ $end
$var wire 1 M' \debug_ar[1]~output_o\ $end
$var wire 1 N' \debug_ar[2]~output_o\ $end
$var wire 1 O' \debug_ar[3]~output_o\ $end
$var wire 1 P' \debug_ar[4]~output_o\ $end
$var wire 1 Q' \debug_ar[5]~output_o\ $end
$var wire 1 R' \debug_ar[6]~output_o\ $end
$var wire 1 S' \debug_ar[7]~output_o\ $end
$var wire 1 T' \debug_ar[8]~output_o\ $end
$var wire 1 U' \debug_ar[9]~output_o\ $end
$var wire 1 V' \debug_ar[10]~output_o\ $end
$var wire 1 W' \debug_ar[11]~output_o\ $end
$var wire 1 X' \debug_ar[12]~output_o\ $end
$var wire 1 Y' \debug_ar[13]~output_o\ $end
$var wire 1 Z' \debug_ar[14]~output_o\ $end
$var wire 1 [' \debug_ar[15]~output_o\ $end
$var wire 1 \' \debug_ar[16]~output_o\ $end
$var wire 1 ]' \debug_ar[17]~output_o\ $end
$var wire 1 ^' \debug_ar[18]~output_o\ $end
$var wire 1 _' \debug_ar[19]~output_o\ $end
$var wire 1 `' \debug_ar[20]~output_o\ $end
$var wire 1 a' \debug_ar[21]~output_o\ $end
$var wire 1 b' \debug_ar[22]~output_o\ $end
$var wire 1 c' \debug_ar[23]~output_o\ $end
$var wire 1 d' \debug_ar[24]~output_o\ $end
$var wire 1 e' \debug_ar[25]~output_o\ $end
$var wire 1 f' \debug_ar[26]~output_o\ $end
$var wire 1 g' \debug_ar[27]~output_o\ $end
$var wire 1 h' \debug_ar[28]~output_o\ $end
$var wire 1 i' \debug_ar[29]~output_o\ $end
$var wire 1 j' \debug_ar[30]~output_o\ $end
$var wire 1 k' \debug_ar[31]~output_o\ $end
$var wire 1 l' \clk~input_o\ $end
$var wire 1 m' \clk~inputclkctrl_outclk\ $end
$var wire 1 n' \pc[0]~32_combout\ $end
$var wire 1 o' \clr~input_o\ $end
$var wire 1 p' \pc[0]~33\ $end
$var wire 1 q' \pc[1]~34_combout\ $end
$var wire 1 r' \pc[1]~35\ $end
$var wire 1 s' \pc[2]~36_combout\ $end
$var wire 1 t' \pc[2]~37\ $end
$var wire 1 u' \pc[3]~38_combout\ $end
$var wire 1 v' \pc[3]~39\ $end
$var wire 1 w' \pc[4]~40_combout\ $end
$var wire 1 x' \pc[4]~41\ $end
$var wire 1 y' \pc[5]~42_combout\ $end
$var wire 1 z' \pc[5]~43\ $end
$var wire 1 {' \pc[6]~44_combout\ $end
$var wire 1 |' \pc[6]~45\ $end
$var wire 1 }' \pc[7]~46_combout\ $end
$var wire 1 ~' \pc[7]~47\ $end
$var wire 1 !( \pc[8]~48_combout\ $end
$var wire 1 "( \pc[8]~49\ $end
$var wire 1 #( \pc[9]~50_combout\ $end
$var wire 1 $( \Memory_inst|memory~43_combout\ $end
$var wire 1 %( \Memory_inst|memory~44_combout\ $end
$var wire 1 &( \Memory_inst|memory~46_combout\ $end
$var wire 1 '( \ir~0_combout\ $end
$var wire 1 (( \ir~1_combout\ $end
$var wire 1 )( \ir~2_combout\ $end
$var wire 1 *( \opcode~0_combout\ $end
$var wire 1 +( \rt_addr~0_combout\ $end
$var wire 1 ,( \rt_addr[0]~1_combout\ $end
$var wire 1 -( \rs_addr~0_combout\ $end
$var wire 1 .( \rs_addr~1_combout\ $end
$var wire 1 /( \rs_addr[1]~feeder_combout\ $end
$var wire 1 0( \rs_addr~2_combout\ $end
$var wire 1 1( \rd_addr~0_combout\ $end
$var wire 1 2( \func~0_combout\ $end
$var wire 1 3( \func[1]~feeder_combout\ $end
$var wire 1 4( \func[2]~feeder_combout\ $end
$var wire 1 5( \rs_addr[1]~3_combout\ $end
$var wire 1 6( \immediate[27]~feeder_combout\ $end
$var wire 1 7( \Memory_inst|memory~45_combout\ $end
$var wire 1 8( \Memory_inst|memory~47_combout\ $end
$var wire 1 9( \AR~0_combout\ $end
$var wire 1 :( \AR~1_combout\ $end
$var wire 1 ;( \AR~2_combout\ $end
$var wire 1 <( \AR~3_combout\ $end
$var wire 1 =( \AR~4_combout\ $end
$var wire 1 >( \AR~5_combout\ $end
$var wire 1 ?( \AR~6_combout\ $end
$var wire 1 @( \AR~7_combout\ $end
$var wire 1 A( \AR~8_combout\ $end
$var wire 1 B( \AR~9_combout\ $end
$var wire 1 C( \pc[9]~51\ $end
$var wire 1 D( \pc[10]~52_combout\ $end
$var wire 1 E( \AR~10_combout\ $end
$var wire 1 F( \pc[10]~53\ $end
$var wire 1 G( \pc[11]~54_combout\ $end
$var wire 1 H( \AR~11_combout\ $end
$var wire 1 I( \pc[11]~55\ $end
$var wire 1 J( \pc[12]~56_combout\ $end
$var wire 1 K( \AR~12_combout\ $end
$var wire 1 L( \pc[12]~57\ $end
$var wire 1 M( \pc[13]~58_combout\ $end
$var wire 1 N( \AR~13_combout\ $end
$var wire 1 O( \pc[13]~59\ $end
$var wire 1 P( \pc[14]~60_combout\ $end
$var wire 1 Q( \AR~14_combout\ $end
$var wire 1 R( \pc[14]~61\ $end
$var wire 1 S( \pc[15]~62_combout\ $end
$var wire 1 T( \AR~15_combout\ $end
$var wire 1 U( \pc[15]~63\ $end
$var wire 1 V( \pc[16]~64_combout\ $end
$var wire 1 W( \AR~16_combout\ $end
$var wire 1 X( \pc[16]~65\ $end
$var wire 1 Y( \pc[17]~66_combout\ $end
$var wire 1 Z( \AR~17_combout\ $end
$var wire 1 [( \pc[17]~67\ $end
$var wire 1 \( \pc[18]~68_combout\ $end
$var wire 1 ]( \AR~18_combout\ $end
$var wire 1 ^( \pc[18]~69\ $end
$var wire 1 _( \pc[19]~70_combout\ $end
$var wire 1 `( \AR~19_combout\ $end
$var wire 1 a( \pc[19]~71\ $end
$var wire 1 b( \pc[20]~72_combout\ $end
$var wire 1 c( \AR~20_combout\ $end
$var wire 1 d( \pc[20]~73\ $end
$var wire 1 e( \pc[21]~74_combout\ $end
$var wire 1 f( \AR~21_combout\ $end
$var wire 1 g( \pc[21]~75\ $end
$var wire 1 h( \pc[22]~76_combout\ $end
$var wire 1 i( \AR~22_combout\ $end
$var wire 1 j( \pc[22]~77\ $end
$var wire 1 k( \pc[23]~78_combout\ $end
$var wire 1 l( \AR~23_combout\ $end
$var wire 1 m( \pc[23]~79\ $end
$var wire 1 n( \pc[24]~80_combout\ $end
$var wire 1 o( \AR~24_combout\ $end
$var wire 1 p( \pc[24]~81\ $end
$var wire 1 q( \pc[25]~82_combout\ $end
$var wire 1 r( \AR~25_combout\ $end
$var wire 1 s( \pc[25]~83\ $end
$var wire 1 t( \pc[26]~84_combout\ $end
$var wire 1 u( \AR~26_combout\ $end
$var wire 1 v( \pc[26]~85\ $end
$var wire 1 w( \pc[27]~86_combout\ $end
$var wire 1 x( \AR~27_combout\ $end
$var wire 1 y( \pc[27]~87\ $end
$var wire 1 z( \pc[28]~88_combout\ $end
$var wire 1 {( \AR~28_combout\ $end
$var wire 1 |( \pc[28]~89\ $end
$var wire 1 }( \pc[29]~90_combout\ $end
$var wire 1 ~( \AR~29_combout\ $end
$var wire 1 !) \pc[29]~91\ $end
$var wire 1 ") \pc[30]~92_combout\ $end
$var wire 1 #) \AR~30_combout\ $end
$var wire 1 $) \pc[30]~93\ $end
$var wire 1 %) \pc[31]~94_combout\ $end
$var wire 1 &) \AR~31_combout\ $end
$var wire 1 ') pc [31] $end
$var wire 1 () pc [30] $end
$var wire 1 )) pc [29] $end
$var wire 1 *) pc [28] $end
$var wire 1 +) pc [27] $end
$var wire 1 ,) pc [26] $end
$var wire 1 -) pc [25] $end
$var wire 1 .) pc [24] $end
$var wire 1 /) pc [23] $end
$var wire 1 0) pc [22] $end
$var wire 1 1) pc [21] $end
$var wire 1 2) pc [20] $end
$var wire 1 3) pc [19] $end
$var wire 1 4) pc [18] $end
$var wire 1 5) pc [17] $end
$var wire 1 6) pc [16] $end
$var wire 1 7) pc [15] $end
$var wire 1 8) pc [14] $end
$var wire 1 9) pc [13] $end
$var wire 1 :) pc [12] $end
$var wire 1 ;) pc [11] $end
$var wire 1 <) pc [10] $end
$var wire 1 =) pc [9] $end
$var wire 1 >) pc [8] $end
$var wire 1 ?) pc [7] $end
$var wire 1 @) pc [6] $end
$var wire 1 A) pc [5] $end
$var wire 1 B) pc [4] $end
$var wire 1 C) pc [3] $end
$var wire 1 D) pc [2] $end
$var wire 1 E) pc [1] $end
$var wire 1 F) pc [0] $end
$var wire 1 G) rd_addr [4] $end
$var wire 1 H) rd_addr [3] $end
$var wire 1 I) rd_addr [2] $end
$var wire 1 J) rd_addr [1] $end
$var wire 1 K) rd_addr [0] $end
$var wire 1 L) ir [31] $end
$var wire 1 M) ir [30] $end
$var wire 1 N) ir [29] $end
$var wire 1 O) ir [28] $end
$var wire 1 P) ir [27] $end
$var wire 1 Q) ir [26] $end
$var wire 1 R) ir [25] $end
$var wire 1 S) ir [24] $end
$var wire 1 T) ir [23] $end
$var wire 1 U) ir [22] $end
$var wire 1 V) ir [21] $end
$var wire 1 W) ir [20] $end
$var wire 1 X) ir [19] $end
$var wire 1 Y) ir [18] $end
$var wire 1 Z) ir [17] $end
$var wire 1 [) ir [16] $end
$var wire 1 \) ir [15] $end
$var wire 1 ]) ir [14] $end
$var wire 1 ^) ir [13] $end
$var wire 1 _) ir [12] $end
$var wire 1 `) ir [11] $end
$var wire 1 a) ir [10] $end
$var wire 1 b) ir [9] $end
$var wire 1 c) ir [8] $end
$var wire 1 d) ir [7] $end
$var wire 1 e) ir [6] $end
$var wire 1 f) ir [5] $end
$var wire 1 g) ir [4] $end
$var wire 1 h) ir [3] $end
$var wire 1 i) ir [2] $end
$var wire 1 j) ir [1] $end
$var wire 1 k) ir [0] $end
$var wire 1 l) opcode [5] $end
$var wire 1 m) opcode [4] $end
$var wire 1 n) opcode [3] $end
$var wire 1 o) opcode [2] $end
$var wire 1 p) opcode [1] $end
$var wire 1 q) opcode [0] $end
$var wire 1 r) rt_addr [4] $end
$var wire 1 s) rt_addr [3] $end
$var wire 1 t) rt_addr [2] $end
$var wire 1 u) rt_addr [1] $end
$var wire 1 v) rt_addr [0] $end
$var wire 1 w) rs_addr [4] $end
$var wire 1 x) rs_addr [3] $end
$var wire 1 y) rs_addr [2] $end
$var wire 1 z) rs_addr [1] $end
$var wire 1 {) rs_addr [0] $end
$var wire 1 |) func [5] $end
$var wire 1 }) func [4] $end
$var wire 1 ~) func [3] $end
$var wire 1 !* func [2] $end
$var wire 1 "* func [1] $end
$var wire 1 #* func [0] $end
$var wire 1 $* immediate [31] $end
$var wire 1 %* immediate [30] $end
$var wire 1 &* immediate [29] $end
$var wire 1 '* immediate [28] $end
$var wire 1 (* immediate [27] $end
$var wire 1 )* immediate [26] $end
$var wire 1 ** immediate [25] $end
$var wire 1 +* immediate [24] $end
$var wire 1 ,* immediate [23] $end
$var wire 1 -* immediate [22] $end
$var wire 1 .* immediate [21] $end
$var wire 1 /* immediate [20] $end
$var wire 1 0* immediate [19] $end
$var wire 1 1* immediate [18] $end
$var wire 1 2* immediate [17] $end
$var wire 1 3* immediate [16] $end
$var wire 1 4* immediate [15] $end
$var wire 1 5* immediate [14] $end
$var wire 1 6* immediate [13] $end
$var wire 1 7* immediate [12] $end
$var wire 1 8* immediate [11] $end
$var wire 1 9* immediate [10] $end
$var wire 1 :* immediate [9] $end
$var wire 1 ;* immediate [8] $end
$var wire 1 <* immediate [7] $end
$var wire 1 =* immediate [6] $end
$var wire 1 >* immediate [5] $end
$var wire 1 ?* immediate [4] $end
$var wire 1 @* immediate [3] $end
$var wire 1 A* immediate [2] $end
$var wire 1 B* immediate [1] $end
$var wire 1 C* immediate [0] $end
$var wire 1 D* AR [31] $end
$var wire 1 E* AR [30] $end
$var wire 1 F* AR [29] $end
$var wire 1 G* AR [28] $end
$var wire 1 H* AR [27] $end
$var wire 1 I* AR [26] $end
$var wire 1 J* AR [25] $end
$var wire 1 K* AR [24] $end
$var wire 1 L* AR [23] $end
$var wire 1 M* AR [22] $end
$var wire 1 N* AR [21] $end
$var wire 1 O* AR [20] $end
$var wire 1 P* AR [19] $end
$var wire 1 Q* AR [18] $end
$var wire 1 R* AR [17] $end
$var wire 1 S* AR [16] $end
$var wire 1 T* AR [15] $end
$var wire 1 U* AR [14] $end
$var wire 1 V* AR [13] $end
$var wire 1 W* AR [12] $end
$var wire 1 X* AR [11] $end
$var wire 1 Y* AR [10] $end
$var wire 1 Z* AR [9] $end
$var wire 1 [* AR [8] $end
$var wire 1 \* AR [7] $end
$var wire 1 ]* AR [6] $end
$var wire 1 ^* AR [5] $end
$var wire 1 _* AR [4] $end
$var wire 1 `* AR [3] $end
$var wire 1 a* AR [2] $end
$var wire 1 b* AR [1] $end
$var wire 1 c* AR [0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
x"
0Q"
1R"
xS"
1T"
1U"
1V"
1W"
1X"
1Y"
0Z"
x["
0:%
0;%
0<%
0=%
0>%
0?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
0G%
0H%
0I%
0J%
0K%
0L%
0M%
0N%
0O%
0P%
0Q%
0R%
0S%
0T%
0U%
0V%
0W%
0X%
0Y%
0Z%
z[%
z\%
z]%
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0~%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
00&
01&
02&
03&
04&
05&
06&
07&
08&
09&
0:&
0;&
0<&
0=&
0>&
0?&
0@&
0A&
0B&
0C&
0D&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
0R&
0S&
0T&
0U&
0V&
0W&
0X&
0Y&
0Z&
0[&
0\&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
0j&
0k&
0l&
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
0z&
0{&
0|&
0}&
0~&
0!'
0"'
0#'
0$'
0%'
0&'
0''
0('
0)'
0*'
0+'
0,'
1-'
1.'
0/'
00'
01'
02'
03'
04'
05'
06'
17'
18'
09'
0:'
0;'
0<'
1='
0>'
0?'
0@'
1A'
0B'
0C'
0D'
0E'
0F'
0G'
0H'
0I'
0J'
0K'
0L'
0M'
0N'
0O'
0P'
0Q'
0R'
0S'
0T'
0U'
0V'
0W'
0X'
0Y'
0Z'
0['
0\'
0]'
0^'
0_'
0`'
0a'
0b'
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
0k'
0l'
0m'
1n'
xo'
0p'
0q'
1r'
0s'
0t'
0u'
1v'
0w'
0x'
0y'
1z'
0{'
0|'
0}'
1~'
0!(
0"(
0#(
1$(
1%(
1&(
x'(
x((
0)(
0*(
0+(
1,(
0-(
0.(
0/(
00(
01(
02(
03(
04(
x5(
06(
17(
08(
09(
0:(
0;(
0<(
0=(
0>(
0?(
0@(
0A(
0B(
1C(
0D(
0E(
0F(
0G(
0H(
1I(
0J(
0K(
0L(
0M(
0N(
1O(
0P(
0Q(
0R(
0S(
0T(
1U(
0V(
0W(
0X(
0Y(
0Z(
1[(
0\(
0](
0^(
0_(
0`(
1a(
0b(
0c(
0d(
0e(
0f(
1g(
0h(
0i(
0j(
0k(
0l(
1m(
0n(
0o(
0p(
0q(
0r(
1s(
0t(
0u(
0v(
0w(
0x(
1y(
0z(
0{(
0|(
0}(
0~(
1!)
0")
0#)
0$)
0%)
0&)
0o!
0p!
0q!
0r!
0s!
0t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
0~!
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
0."
0/"
00"
0\"
0]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
0w"
0x"
0y"
0z"
0{"
0|"
0}"
0~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
0.#
0/#
00#
01#
02#
03#
04#
05#
06#
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
0H#
0I#
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0X#
0Y#
0Z#
0[#
0\#
0]#
0^#
0_#
0`#
0a#
0b#
0c#
0d#
0e#
0f#
0g#
0h#
0i#
0j#
0k#
0l#
0m#
0n#
0o#
0p#
0q#
0r#
0s#
0t#
0u#
0v#
0w#
0x#
0y#
0z#
0{#
0|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
0'$
0($
0)$
0*$
0+$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
1T$
0U$
0V$
0W$
1X$
0Y$
0Z$
0[$
0\$
1]$
1^$
0_$
0`$
0a$
0b$
0c$
0d$
0e$
0f$
1g$
1h$
0i$
0j$
0k$
0l$
0m$
0n$
0o$
0p$
0q$
0r$
0s$
0t$
0u$
0v$
0w$
0x$
0y$
0z$
0{$
0|$
0}$
0~$
0!%
0"%
0#%
0$%
0%%
0&%
0'%
0(%
0)%
0*%
0+%
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
02)
03)
04)
05)
06)
07)
08)
09)
0:)
0;)
0<)
0=)
0>)
0?)
0@)
0A)
0B)
0C)
0D)
0E)
0F)
xG)
xH)
0I)
0J)
0K)
xL)
xM)
xN)
xO)
xP)
xQ)
xR)
xS)
xT)
xU)
0V)
xW)
xX)
0Y)
xZ)
x[)
x\)
x])
x^)
x_)
0`)
xa)
xb)
xc)
xd)
xe)
xf)
xg)
xh)
xi)
xj)
xk)
xl)
xm)
0n)
xo)
xp)
xq)
xr)
xs)
xt)
xu)
0v)
xw)
xx)
0y)
0z)
0{)
x|)
x})
x~)
0!*
0"*
x#*
x$*
x%*
x&*
0'*
0(*
x)*
x**
x+*
x,*
x-*
x.*
x/*
x0*
01*
02*
x3*
x4*
x5*
x6*
x7*
x8*
x9*
x:*
x;*
x<*
x=*
x>*
x?*
x@*
xA*
xB*
xC*
0D*
0E*
0F*
0G*
0H*
0I*
0J*
0K*
0L*
0M*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
0U*
0V*
0W*
0X*
0Y*
0Z*
0[*
0\*
0]*
0^*
0_*
0`*
0a*
0b*
0c*
16%
17%
18%
09%
0,%
0-%
0.%
0/%
00%
01%
02%
03%
04%
05%
0#
0$
0%
0&
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
0;
0<
0=
0>
0?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
0L
0M
0N
0O
0P
0Q
0R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
0$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
00!
01!
02!
03!
04!
15!
06!
07!
08!
19!
0:!
0;!
0<!
0=!
1>!
1?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
1H!
1I!
0J!
0K!
0L!
0M!
0N!
0O!
0P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
0Y!
0Z!
0[!
0\!
0]!
0^!
0_!
0`!
0a!
0b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
0l!
0m!
0n!
01"
02"
03"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
0B"
0C"
0D"
0E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
$end
#25000
1!
1Z"
1l'
19%
1m'
1F)
x`)
xV)
x,&
x?&
x+&
x5&
x6&
x;&
1~%
x+(
x.(
x2(
0n'
1p'
0'(
x)(
07(
18(
x9(
xe#
xR#
xf#
x\#
x[#
xV#
1G#
1>'
1I'
0-'
07'
08'
0='
1q'
x3(
x6(
x/(
x4(
x)!
x(!
x}
x|
xw
xs
1Z!
1W$
1L$
0h$
0^$
0]$
0X$
0I!
0?!
0>!
09!
18!
1-!
#50000
0!
0Z"
0l'
09%
0m'
#75000
1!
1Z"
1l'
19%
1m'
0F)
1E)
0`)
xY)
xv)
xz)
xK)
xJ)
x"*
x!*
xc*
xL'
xf&
xe&
x[&
xZ&
xV&
xP&
x<&
xG&
0+&
05&
06&
0;&
1!&
0~%
x*(
x0(
0.(
02(
0q'
0r'
0$(
x:(
1n'
0p'
x'(
0)(
17(
08(
09(
x+%
x'$
x($
x{#
x|#
xv#
xr#
xU#
xJ#
0f#
0\#
0[#
0V#
1F#
0G#
0>'
0I'
1-'
17'
18'
1='
1q'
1r'
0&(
0((
07(
1s'
03(
06(
0/(
xB
xG
xF
x_!
x^!
xc!
xi!
0)!
0}
0|
0w
xv
xk
0Z!
1Y!
0W$
0L$
1h$
1^$
1]$
1X$
0-'
07'
08'
0='
0.'
0A'
0'(
0s'
1I!
1?!
1>!
19!
08!
0-!
0h$
0^$
0]$
0X$
0g$
0T$
0I!
0H!
0?!
0>!
09!
05!
#100000
0!
0Z"
0l'
09%
0m'
#125000
1!
1Z"
1l'
19%
1m'
1F)
0V)
0Y)
xn)
0z)
xy)
0K)
0J)
0"*
0c*
xb*
xM'
0L'
0e&
0[&
0Z&
xW&
0V&
xM&
0<&
0G&
0,&
0?&
1~%
x,(
0*(
00(
0+(
0n'
1p'
x9(
x*%
0+%
0($
0{#
0|#
xu#
0v#
xj#
0U#
0J#
0e#
0R#
1G#
0q'
0r'
04(
0B
xA
0G
0_!
0^!
0c!
xb!
xM!
0(!
0v
0s
0k
1Z!
1s'
#150000
0!
0Z"
0l'
09%
0m'
#175000
1!
1Z"
1l'
19%
1m'
0F)
0E)
1D)
0n)
0y)
xc*
xL'
0W&
0M&
1"&
0!&
0~%
1,(
0s'
1t'
x;(
1q'
1r'
0:(
1n'
0p'
09(
x+%
0u#
0j#
1E#
0F#
0G#
0q'
1s'
0t'
1u'
xB
0b!
0M!
0Z!
0Y!
1X!
0u'
#200000
0!
0Z"
0l'
09%
0m'
#225000
1!
1Z"
1l'
19%
1m'
1F)
0v)
0!*
0c*
0b*
xa*
xN'
0M'
0L'
0f&
0P&
1~%
0n'
1p'
x9(
x)%
0*%
0+%
0'$
0r#
1G#
1q'
0B
0A
x@
0F
0i!
1Z!
#250000
0!
0Z"
0l'
09%
0m'
#275000
1!
1Z"
1l'
19%
1m'
0F)
1E)
xc*
xL'
1!&
0~%
0q'
0r'
x:(
1n'
0p'
09(
x+%
1F#
0G#
1q'
1r'
0s'
1t'
xB
0Z!
1Y!
1u'
1s'
0t'
0u'
#300000
0!
0Z"
0l'
09%
0m'
#325000
1!
1Z"
1l'
19%
1m'
1F)
0c*
xb*
xM'
0L'
1~%
0n'
1p'
x9(
x*%
0+%
1G#
0q'
0r'
0B
xA
1Z!
0s'
1t'
1u'
#350000
0!
0Z"
0l'
09%
0m'
#375000
1!
1Z"
1l'
19%
1m'
0F)
0E)
0D)
1C)
xc*
xL'
1#&
0"&
0!&
0~%
0u'
0v'
x<(
1s'
0t'
0;(
1q'
1r'
0:(
1n'
0p'
09(
x+%
1D#
0E#
0F#
0G#
0q'
0s'
1u'
1v'
1w'
xB
0Z!
0Y!
0X!
1W!
0w'
#400000
0!
0Z"
0l'
09%
0m'
#425000
1!
1Z"
1l'
19%
1m'
1F)
0c*
0b*
0a*
x`*
xO'
0N'
0M'
0L'
1~%
0n'
1p'
x9(
x(%
0)%
0*%
0+%
1G#
1q'
0B
0A
0@
x?
1Z!
#450000
0!
0Z"
0l'
09%
0m'
#475000
1!
1Z"
1l'
19%
1m'
0F)
1E)
xc*
xL'
1!&
0~%
0q'
0r'
x:(
1n'
0p'
09(
x+%
1F#
0G#
1q'
1r'
1s'
xB
0Z!
1Y!
0s'
#500000
0!
0Z"
0l'
09%
0m'
#525000
1!
1Z"
1l'
19%
1m'
1F)
0c*
xb*
xM'
0L'
1~%
0n'
1p'
x9(
x*%
0+%
1G#
0q'
0r'
0B
xA
1Z!
1s'
#550000
0!
0Z"
0l'
09%
0m'
#575000
1!
1Z"
1l'
19%
1m'
0F)
0E)
1D)
xc*
xL'
1"&
0!&
0~%
0s'
1t'
x;(
1q'
1r'
0:(
1n'
0p'
09(
x+%
1E#
0F#
0G#
0q'
1s'
0t'
0u'
0v'
xB
0Z!
0Y!
1X!
1w'
1u'
1v'
0w'
#600000
0!
0Z"
0l'
09%
0m'
#625000
1!
1Z"
1l'
19%
1m'
1F)
0c*
0b*
xa*
xN'
0M'
0L'
1~%
0n'
1p'
x9(
x)%
0*%
0+%
1G#
1q'
0B
0A
x@
1Z!
#650000
0!
0Z"
0l'
09%
0m'
#675000
1!
1Z"
1l'
19%
1m'
0F)
1E)
xc*
xL'
1!&
0~%
0q'
0r'
x:(
1n'
0p'
09(
x+%
1F#
0G#
1q'
1r'
0s'
1t'
xB
0Z!
1Y!
0u'
0v'
1s'
0t'
1u'
1v'
1w'
0w'
#700000
0!
0Z"
0l'
09%
0m'
#725000
1!
1Z"
1l'
19%
1m'
1F)
0c*
xb*
xM'
0L'
1~%
0n'
1p'
x9(
x*%
0+%
1G#
0q'
0r'
0B
xA
1Z!
0s'
1t'
0u'
0v'
1w'
#750000
0!
0Z"
0l'
09%
0m'
#775000
1!
1Z"
1l'
19%
1m'
0F)
0E)
0D)
0C)
1B)
xc*
xL'
1$&
0#&
0"&
0!&
0~%
0w'
1x'
x=(
1u'
1v'
0<(
1s'
0t'
0;(
1q'
1r'
0:(
1n'
0p'
09(
x+%
1C#
0D#
0E#
0F#
0G#
0q'
0s'
0u'
1w'
0x'
1y'
xB
0Z!
0Y!
0X!
0W!
1V!
0y'
#800000
0!
0Z"
0l'
09%
0m'
#825000
1!
1Z"
1l'
19%
1m'
1F)
0c*
0b*
0a*
0`*
x_*
xP'
0O'
0N'
0M'
0L'
1~%
0n'
1p'
x9(
x'%
0(%
0)%
0*%
0+%
1G#
1q'
0B
0A
0@
0?
x>
1Z!
#850000
0!
0Z"
0l'
09%
0m'
#875000
1!
1Z"
1l'
19%
1m'
0F)
1E)
xc*
xL'
1!&
0~%
0q'
0r'
x:(
1n'
0p'
09(
x+%
1F#
0G#
1q'
1r'
1s'
xB
0Z!
1Y!
0s'
#900000
0!
0Z"
0l'
09%
0m'
#925000
1!
1Z"
1l'
19%
1m'
1F)
0c*
xb*
xM'
0L'
1~%
0n'
1p'
x9(
x*%
0+%
1G#
0q'
0r'
0B
xA
1Z!
1s'
#950000
0!
0Z"
0l'
09%
0m'
#975000
1!
1Z"
1l'
19%
1m'
0F)
0E)
1D)
xc*
xL'
1"&
0!&
0~%
0s'
1t'
x;(
1q'
1r'
0:(
1n'
0p'
09(
x+%
1E#
0F#
0G#
0q'
1s'
0t'
1u'
xB
0Z!
0Y!
1X!
0u'
#1000000
