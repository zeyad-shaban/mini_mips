library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;

entity Memory is -- Nx16, N = 32
	Port(
		clk: in std_logic;
		write_enable: in std_logic;
		
		data_in: in std_logic_vector(15 downto 0);
		address: in std_logic_vector(3 downto 0);
		data_out: out std_logic_vector(16 downto 0);
	);
end Memory;

architecture Beh of Memory is
	type memory_array is array (0 to 31) of std_logic_vector(15 downto 0);
	signal memory: memory_array := (others => (others => '0'));
begin
	process(clk)
	begin
		if rising_edge(clk)
			if write_enable = '1' then
				memory(to_integer(unsigned(address))) <= data_in;
			else
				data_out <= memory(to_integer(unsigned(address)));
			end if;
		end if;
	end process;
end architecture;